/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("buildlogic.java-application-conventions")
}

dependencies {
    implementation("org.apache.commons:commons-text")
    implementation(project(":utilities"))

    // Apache Flink 2.1.x core and streaming
    implementation("org.apache.flink:flink-streaming-java:2.1.0")
    implementation("org.apache.flink:flink-clients:2.1.0")
    implementation("org.apache.flink:flink-avro:2.1.0")
    implementation("org.apache.flink:flink-avro-confluent-registry:2.1.0")
    implementation("org.apache.flink:flink-connector-base:2.1.0")

    // Kafka connector for Flink 2.x (decoupled connector)
    implementation("org.apache.flink:flink-connector-kafka:4.0.0-2.0")

    // Logging (simple slf4j binding for local run)
    runtimeOnly("org.slf4j:slf4j-simple:2.0.13")

    // For the helper Avro producer (Confluent serializer and Kafka client)
    implementation("io.confluent:kafka-avro-serializer:7.6.0")
    implementation("org.apache.kafka:kafka-clients:3.9.0")
}

application {
    // Define the main class for the application.
    mainClass = "org.example.app.FlinkKafkaAvroApp"
}

// Helper tasks to run producer and the Flink app locally
tasks.register<JavaExec>("runProducer") {
    group = "application"
    description = "Run the Avro producer to seed demo-topic"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("org.example.app.AvroProducer")
}

tasks.register<JavaExec>("runFlinkApp") {
    group = "application"
    description = "Run the Flink Kafka Avro job locally"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("org.example.app.FlinkKafkaAvroApp")
}

// The Flink ShadowJar plugin configures the shadowJar task; defaults should suffice.
